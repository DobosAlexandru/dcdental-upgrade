{"version":3,"sources":["webpack:///./source/_assets/js/gallery.js"],"names":["gallerySelector","onThumbnailsClick","e","window","event","preventDefault","returnValue","clickedListItem","closest","el","fn","parentNode","target","srcElement","tagName","index","clickedGallery","childNodes","numChildNodes","length","nodeIndex","i","nodeType","openPhotoSwipe","galleryElement","disableAnimation","fromURL","gallery","options","items","pswpElement","document","querySelectorAll","childElements","size","item","thumbElements","numNodes","children","getAttribute","split","src","w","parseInt","h","location","msrc","title","innerHTML","mediumSrc","m","o","push","parseThumbnailElements","galleryUID","getThumbBoundsFn","thumbnail","pageYScroll","pageYOffset","documentElement","scrollTop","rect","getBoundingClientRect","x","left","y","top","width","addCaptionHTMLFn","captionEl","isFake","innerText","galleryPIDs","j","pid","isNaN","radios","getElementsByName","checked","id","mainClass","barsSize","bottom","fullscreenEl","shareEl","bgOpacity","tapToClose","tapToToggleControls","showAnimationDuration","PhotoSwipe","PhotoSwipeUI_Default","realViewportWidth","imageSrcWillChange","useLargeImages","firstResize","listen","dpiRatio","devicePixelRatio","Math","min","viewportSize","likelyTouchDevice","screen","invalidateCurrItems","init","galleryElements","l","setAttribute","onclick","hashData","hash","substring","params","vars","pair","gid","photoswipeParseHash","initPhotoSwipeFromDOM"],"mappings":"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","file":"/js/gallery.js","sourcesContent":["   (function() {\n\n        var initPhotoSwipeFromDOM = function(gallerySelector) {\n\n            var parseThumbnailElements = function(el) {\n                var thumbElements = el.childNodes,\n                    numNodes = thumbElements.length,\n                    items = [],\n                    el,\n                    childElements,\n                    thumbnailEl,\n                    size,\n                    item;\n\n                for(var i = 0; i < numNodes; i++) {\n                    el = thumbElements[i];\n\n                    // include only element nodes \n                    if(el.nodeType !== 1) {\n                      continue;\n                    }\n\n                    childElements = el.children;\n\n                    size = el.getAttribute('data-size').split('x');\n\n                    // create slide object\n                    item = {\n                        src: el.getAttribute('href'),\n                        w: parseInt(size[0], 10),\n                        h: parseInt(size[1], 10),\n                        location: el.getAttribute('data-location')\n                    };\n\n                    item.el = el; // save link to element for getThumbBoundsFn\n\n                    if(childElements.length > 0) {\n                      item.msrc = childElements[0].getAttribute('src'); // thumbnail url\n                      if(childElements.length > 1) {\n                          item.title = childElements[1].innerHTML; // caption (contents of figure)\n                      }\n                    }\n\n\n                    var mediumSrc = el.getAttribute('data-med');\n\n                    if(mediumSrc) {\n                        size = el.getAttribute('data-med-size').split('x');\n                        // \"medium-sized\" image\n                        item.m = {\n                            src: mediumSrc,\n                            w: parseInt(size[0], 10),\n                            h: parseInt(size[1], 10)\n                        };\n                    }\n                    // original image\n                    item.o = {\n                        src: item.src,\n                        w: item.w,\n                        h: item.h\n                    };\n\n                    items.push(item);\n                }\n\n                return items;\n            };\n\n            // find nearest parent element\n            var closest = function closest(el, fn) {\n                return el && ( fn(el) ? el : closest(el.parentNode, fn) );\n            };\n\n            var onThumbnailsClick = function(e) {\n                e = e || window.event;\n                e.preventDefault ? e.preventDefault() : e.returnValue = false;\n\n                var eTarget = e.target || e.srcElement;\n\n                var clickedListItem = closest(eTarget, function(el) {\n                    return el.tagName === 'A';\n                });\n\n                if(!clickedListItem) {\n                    return;\n                }\n\n                var clickedGallery = clickedListItem.parentNode;\n\n                var childNodes = clickedListItem.parentNode.childNodes,\n                    numChildNodes = childNodes.length,\n                    nodeIndex = 0,\n                    index;\n\n                for (var i = 0; i < numChildNodes; i++) {\n                    if(childNodes[i].nodeType !== 1) { \n                        continue; \n                    }\n\n                    if(childNodes[i] === clickedListItem) {\n                        index = nodeIndex;\n                        break;\n                    }\n                    nodeIndex++;\n                }\n\n                if(index >= 0) {\n                    openPhotoSwipe( index, clickedGallery );\n                }\n                return false;\n            };\n\n            var photoswipeParseHash = function() {\n                var hash = window.location.hash.substring(1),\n                params = {};\n\n                if(hash.length < 5) { // pid=1\n                    return params;\n                }\n\n                var vars = hash.split('&');\n                for (var i = 0; i < vars.length; i++) {\n                    if(!vars[i]) {\n                        continue;\n                    }\n                    var pair = vars[i].split('=');  \n                    if(pair.length < 2) {\n                        continue;\n                    }           \n                    params[pair[0]] = pair[1];\n                }\n\n                if(params.gid) {\n                    params.gid = parseInt(params.gid, 10);\n                }\n\n                return params;\n            };\n\n            var openPhotoSwipe = function(index, galleryElement, disableAnimation, fromURL) {\n                var pswpElement = document.querySelectorAll('.pswp')[0],\n                    gallery,\n                    options,\n                    items;\n\n                items = parseThumbnailElements(galleryElement);\n\n                // define options (if needed)\n                options = {\n\n                    galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n\n                    getThumbBoundsFn: function(index) {\n                        // See Options->getThumbBoundsFn section of docs for more info\n                        var thumbnail = items[index].el.children[0],\n                            pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n                            rect = thumbnail.getBoundingClientRect(); \n\n                        return {x:rect.left, y:rect.top + pageYScroll, w:rect.width};\n                    },\n\n                    addCaptionHTMLFn: function(item, captionEl, isFake) {\n                        if(!item.title) {\n                            captionEl.children[0].innerText = '';\n                            return false;\n                        }\n                        captionEl.children[0].innerHTML = item.title +  '<br/><small>Photo: ' + item.location + '</small>';\n                        return true;\n                    }\n                    \n                };\n\n\n                if(fromURL) {\n                    if(options.galleryPIDs) {\n                        // parse real index when custom PIDs are used \n                        // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n                        for(var j = 0; j < items.length; j++) {\n                            if(items[j].pid == index) {\n                                options.index = j;\n                                break;\n                            }\n                        }\n                    } else {\n                        options.index = parseInt(index, 10) - 1;\n                    }\n                } else {\n                    options.index = parseInt(index, 10);\n                }\n\n                // exit if index not found\n                if( isNaN(options.index) ) {\n                    return;\n                }\n\n\n                var radios = document.getElementsByName('gallery-style');\n                for (var i = 0, length = radios.length; i < length; i++) {\n                    if (radios[i].checked) {\n                        if(radios[i].id == 'radio-all-controls') {\n\n                        } else if(radios[i].id == 'radio-minimal-black') {\n                            options.mainClass = 'pswp--minimal--dark';\n                            options.barsSize = {top:0,bottom:0};\n                            options.captionEl = false;\n                            options.fullscreenEl = false;\n                            options.shareEl = false;\n                            options.bgOpacity = 0.85;\n                            options.tapToClose = true;\n                            options.tapToToggleControls = false;\n                        }\n                        break;\n                    }\n                }\n\n                if(disableAnimation) {\n                    options.showAnimationDuration = 0;\n                }\n\n                // Pass data to PhotoSwipe and initialize it\n                gallery = new PhotoSwipe( pswpElement, PhotoSwipeUI_Default, items, options);\n\n                // see: http://photoswipe.com/documentation/responsive-images.html\n                var realViewportWidth,\n                    useLargeImages = false,\n                    firstResize = true,\n                    imageSrcWillChange;\n\n                gallery.listen('beforeResize', function() {\n\n                    var dpiRatio = window.devicePixelRatio ? window.devicePixelRatio : 1;\n                    dpiRatio = Math.min(dpiRatio, 2.5);\n                    realViewportWidth = gallery.viewportSize.x * dpiRatio;\n\n\n                    if(realViewportWidth >= 1200 || (!gallery.likelyTouchDevice && realViewportWidth > 800) || screen.width > 1200 ) {\n                        if(!useLargeImages) {\n                            useLargeImages = true;\n                            imageSrcWillChange = true;\n                        }\n                        \n                    } else {\n                        if(useLargeImages) {\n                            useLargeImages = false;\n                            imageSrcWillChange = true;\n                        }\n                    }\n\n                    if(imageSrcWillChange && !firstResize) {\n                        gallery.invalidateCurrItems();\n                    }\n\n                    if(firstResize) {\n                        firstResize = false;\n                    }\n\n                    imageSrcWillChange = false;\n\n                });\n\n                gallery.listen('gettingData', function(index, item) {\n                    if( useLargeImages ) {\n                        item.src = item.o.src;\n                        item.w = item.o.w;\n                        item.h = item.o.h;\n                    } else {\n                        item.src = item.m.src;\n                        item.w = item.m.w;\n                        item.h = item.m.h;\n                    }\n                });\n\n                gallery.init();\n            };\n\n            // select all gallery elements\n            var galleryElements = document.querySelectorAll( gallerySelector );\n            for(var i = 0, l = galleryElements.length; i < l; i++) {\n                galleryElements[i].setAttribute('data-pswp-uid', i+1);\n                galleryElements[i].onclick = onThumbnailsClick;\n            }\n\n            // Parse URL and open gallery if it contains #&pid=3&gid=1\n            var hashData = photoswipeParseHash();\n            if(hashData.pid && hashData.gid) {\n                openPhotoSwipe( hashData.pid,  galleryElements[ hashData.gid - 1 ], true, true );\n            }\n        };\n\n        initPhotoSwipeFromDOM('.demo-gallery');\n\n    })();"],"sourceRoot":""}